<!DOCTYPE html>
<html>
<head lang="en">
    <meta charset="UTF-8">
    <title></title>
    <style>
        h1
        {
            color: red;
        }
        body{
           text-align: center;
        }
        ul,ol
        {
            text-align: left;
        }
        small
        {
            display: box;
            -webkit-box-pack:left;
        }
    </style>
</head>
<body>
<small><a href="../index.html">&lt;&lt;主页</a></small>
<hr>
<ul>
    <li><a href="bookshop.cdm">概念模型 - Download</a></li>
    <li><a href="bookshop.pdm">物理模型 - Download</a></li>
    <li><a href="bookshop.sql">sql代码 - Download</a></li>
</ul>
<hr>
<ol>
    <li><a href="Full%20Conceptual%20Report.html">完整概念模型报告</a></li>
    <li><a href="Full%20Physical%20Report.html">完整物理模型报告</a></li>
</ol>
<hr>
<h1>概念模型</h1>
<img src="bookshop1.bmp">
<h1>物理模型</h1>
<img src="bookshop2.png">
<h1>SQL代码</h1>
<pre>
<code>/*==============================================================*/
/* DBMS name:      Microsoft SQL Server 2008                    */
/* Created on:     2014/9/28 9:38:49                            */
/*==============================================================*/


if exists (select 1
from sys.sysreferences r join sys.sysobjects o on (o.id = r.constid and o.type = 'F')
where r.fkeyid = object_id('predom') and o.name = 'FK_PREDOM_PREDOM_USERGROU')
alter table predom
drop constraint FK_PREDOM_PREDOM_USERGROU
go

if exists (select 1
from sys.sysreferences r join sys.sysobjects o on (o.id = r.constid and o.type = 'F')
where r.fkeyid = object_id('predom') and o.name = 'FK_PREDOM_PREDOM2_FUNCTION')
alter table predom
drop constraint FK_PREDOM_PREDOM2_FUNCTION
go

if exists (select 1
from sys.sysreferences r join sys.sysobjects o on (o.id = r.constid and o.type = 'F')
where r.fkeyid = object_id('users') and o.name = 'FK_USERS_BELONG_USERGROU')
alter table users
drop constraint FK_USERS_BELONG_USERGROU
go

if exists (select 1
from  sysindexes
where  id    = object_id('functions')
and   name  = 'name_UQ'
and   indid > 0
and   indid < 255)
drop index functions.name_UQ
go

if exists (select 1
from  sysobjects
where  id = object_id('functions')
and   type = 'U')
drop table functions
go

if exists (select 1
from  sysindexes
where  id    = object_id('predom')
and   name  = 'predom2_FK'
and   indid > 0
and   indid < 255)
drop index predom.predom2_FK
go

if exists (select 1
from  sysindexes
where  id    = object_id('predom')
and   name  = 'predom_FK'
and   indid > 0
and   indid < 255)
drop index predom.predom_FK
go

if exists (select 1
from  sysobjects
where  id = object_id('predom')
and   type = 'U')
drop table predom
go

if exists (select 1
from  sysindexes
where  id    = object_id('userGroup')
and   name  = 'name_UQ'
and   indid > 0
and   indid < 255)
drop index userGroup.name_UQ
go

if exists (select 1
from  sysobjects
where  id = object_id('userGroup')
and   type = 'U')
drop table userGroup
go

if exists (select 1
from  sysindexes
where  id    = object_id('users')
and   name  = 'email_UQ'
and   indid > 0
and   indid < 255)
drop index users.email_UQ
go

if exists (select 1
from  sysindexes
where  id    = object_id('users')
and   name  = 'belong_FK'
and   indid > 0
and   indid < 255)
drop index users.belong_FK
go

if exists (select 1
from  sysobjects
where  id = object_id('users')
and   type = 'U')
drop table users
go

/*==============================================================*/
/* Table: functions                                             */
/*==============================================================*/
create table functions (
fucntions_id         int                  identity,
functions_name       varchar(100)         not null,
functions_note       varchar(100)         null,
constraint PK_FUNCTIONS primary key nonclustered (fucntions_id)
)
go

/*==============================================================*/
/* Index: name_UQ                                               */
/*==============================================================*/
create unique index name_UQ on functions (
functions_name ASC
)
go

/*==============================================================*/
/* Table: predom                                                */
/*==============================================================*/
create table predom (
predom_id            int                  identity,
userGroup_id         int                  not null,
fucntions_id         int                  not null,
constraint PK_PREDOM primary key (predom_id)
)
go

/*==============================================================*/
/* Index: predom_FK                                             */
/*==============================================================*/
create index predom_FK on predom (
userGroup_id ASC
)
go

/*==============================================================*/
/* Index: predom2_FK                                            */
/*==============================================================*/
create index predom2_FK on predom (
fucntions_id ASC
)
go

/*==============================================================*/
/* Table: userGroup                                             */
/*==============================================================*/
create table userGroup (
userGroup_id         int                  identity,
userGroup_name       varchar(20)          not null,
userGroup_note       varchar(100)         null,
constraint PK_USERGROUP primary key nonclustered (userGroup_id)
)
go

/*==============================================================*/
/* Index: name_UQ                                               */
/*==============================================================*/
create unique index name_UQ on userGroup (
userGroup_name ASC
)
go

/*==============================================================*/
/* Table: users                                                 */
/*==============================================================*/
create table users (
users_id1            int                  identity,
userGroup_id         int                  null,
users_name           varchar(10)          not null,
users_sex            char(2)              not null,
users_address        varchar(100)         not null,
users_postcode       char(6)              not null,
usesr_telPhone       char(11)             not null,
users_eMail          varchar(40)          not null,
users_password       varchar(20)          not null,
constraint PK_USERS primary key nonclustered (users_id1)
)
go

/*==============================================================*/
/* Index: belong_FK                                             */
/*==============================================================*/
create index belong_FK on users (
userGroup_id ASC
)
go

/*==============================================================*/
/* Index: email_UQ                                              */
/*==============================================================*/
create unique index email_UQ on users (
users_eMail ASC
)
go

alter table predom
add constraint FK_PREDOM_PREDOM_USERGROU foreign key (userGroup_id)
references userGroup (userGroup_id)
on update cascade on delete cascade
go

alter table predom
add constraint FK_PREDOM_PREDOM2_FUNCTION foreign key (fucntions_id)
references functions (fucntions_id)
on update cascade on delete cascade
go

alter table users
add constraint FK_USERS_BELONG_USERGROU foreign key (userGroup_id)
references userGroup (userGroup_id)
on update cascade on delete cascade
go

</code></pre>
</body>
</html>